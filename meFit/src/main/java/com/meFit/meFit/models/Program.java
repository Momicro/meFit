package com.meFit.meFit.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;

import javax.persistence.*;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

@Entity
@Table(name = "Program")
@ApiModel(description = "Program Model")
public @Data class Program {

    //autogenerated ID which never has to be defined in future functions.
    @ApiModelProperty(notes = "ID of the program", name = "id", value = "1" )
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    //Here the static components of the model
    @ApiModelProperty(notes = "name", name = "name", value = "something"  )
    @Column(name="name",
            nullable = false,
            columnDefinition = "TEXT")
    private String name;

    @ApiModelProperty(notes = "category", name = "category", value = "something"  )
    @Column(name="category",
            nullable = false,
            columnDefinition = "TEXT")
    private String category;

    //workouts - programs - relation
    @ApiModelProperty(notes = "List of workout IDs which play in the program", name = "List of workout IDs" )
    @ManyToMany(cascade = {/*CascadeType.ALL, */CascadeType.PERSIST, CascadeType.MERGE, CascadeType.DETACH}, mappedBy = "programs")
    public Set<Workout> workouts= new HashSet<>();

    //restricts the output to a List of character IDs
    @JsonGetter("workouts")
    public List<String> workouts() {
        return workouts.stream()
                .map(workout -> {
                    return "/api/v1/workouts/" + workout.getId();
                }).collect(Collectors.toList());
    }
}
